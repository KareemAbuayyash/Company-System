<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Company System</title>
    
    <!-- Bootstrap 5.3.0 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome 6.4.0 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <style>
        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --accent-color: #f093fb;
            --dark-color: #343a40;
            --light-color: #f8f9fa;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--light-color);
        }

        .navbar {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%) !important;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 1rem 0;
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: white !important;
        }

        .navbar-brand:hover {
            color: var(--accent-color) !important;
        }

        .navbar-nav .nav-link {
            color: rgba(255, 255, 255, 0.9) !important;
            font-weight: 500;
            margin: 0 0.5rem;
            padding: 0.5rem 1rem !important;
            border-radius: 20px;
            transition: all 0.3s ease;
        }

        .navbar-nav .nav-link:hover {
            color: white !important;
            background-color: rgba(255, 255, 255, 0.1);
            transform: translateY(-1px);
        }

        .navbar-nav .nav-link.active {
            background-color: rgba(255, 255, 255, 0.2);
            color: white !important;
        }

        .navbar-text {
            color: rgba(255, 255, 255, 0.8) !important;
            font-weight: 500;
        }

        .btn-logout {
            background: none !important;
            border: 1px solid rgba(255, 255, 255, 0.3) !important;
            color: white !important;
            border-radius: 20px !important;
            padding: 0.4rem 1rem !important;
            transition: all 0.3s ease;
        }

        .btn-logout:hover {
            background: rgba(255, 255, 255, 0.1) !important;
            border-color: white !important;
            color: white !important;
        }

        .main-content {
            min-height: calc(100vh - 80px);
            padding-top: 2rem;
        }

        .container {
            max-width: 1200px;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary-color);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--secondary-color);
        }

        /* Loading overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive navigation */
        @@media (max-width: 768px) {
            .navbar-nav {
                text-align: center;
                margin-top: 1rem;
            }
            
            .navbar-nav .nav-link {
                margin: 0.2rem 0;
            }
        }

        /* Toast notifications */
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
        }

        .toast {
            background-color: white;
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .toast-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            border-radius: 10px 10px 0 0;
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <!-- Toast Container -->
    <div class="toast-container" id="toastContainer"></div>

    <header>
        <nav class="navbar navbar-expand-lg">
            <div class="container">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-building"></i> Company System
                </a>
                
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" 
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon" style="background-image: url('data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.8%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e');"></span>
                </button>
                
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" ? "active" : "")" 
                               asp-controller="Home" asp-action="Index">
                                <i class="fas fa-home"></i> Home
                            </a>
                        </li>
                        
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "User" && ViewContext.RouteData.Values["Action"]?.ToString() == "Profile" ? "active" : "")" 
                                   asp-controller="User" asp-action="Profile">
                                    <i class="fas fa-user-circle"></i> My Profile
                                </a>
                            </li>
                            
                            @if (User.HasClaim("Role", "Administrator") || User.HasClaim("Role", "HR") || User.HasClaim("Role", "Lead"))
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="managementDropdown" role="button" 
                                       data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-cogs"></i> Management
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="managementDropdown">
                                        @if (User.HasClaim("Role", "Administrator") || User.HasClaim("Role", "HR") || User.HasClaim("Role", "Lead"))
                                        {
                                            <li>
                                                <a class="dropdown-item" asp-controller="User" asp-action="Index">
                                                    <i class="fas fa-users"></i> Manage Users
                                                </a>
                                            </li>
                                        }
                                        @if (User.HasClaim("Role", "Administrator"))
                                        {
                                            <li>
                                                <a class="dropdown-item" asp-controller="Role" asp-action="Index">
                                                    <i class="fas fa-user-shield"></i> Manage Roles
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        }
                    </ul>
                    
                    <ul class="navbar-nav">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <span class="navbar-text me-3">
                                    <i class="fas fa-user"></i> Welcome, @User.Identity.Name!
                                </span>
                            </li>
                            <li class="nav-item">
                                <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline" id="logoutForm">
                                    <button type="submit" class="btn btn-logout">
                                        <i class="fas fa-sign-out-alt"></i> Logout
                                    </button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">
                                    <i class="fas fa-sign-in-alt"></i> Login
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="main-content">
        <div class="container">
            @RenderBody()
        </div>
    </main>
    
    <!-- jQuery 3.6.0 -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Bootstrap 5.3.0 -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Show loading overlay for form submissions
            $('form:not(#logoutForm)').submit(function() {
                showLoading();
            });

            // Hide loading overlay when page loads
            hideLoading();

            // Logout confirmation
            $('#logoutForm').submit(function(e) {
                e.preventDefault();
                
                if (confirm('Are you sure you want to logout?')) {
                    showLoading();
                    this.submit();
                }
            });

            // Auto-hide alerts after 5 seconds
            $('.alert:not(.alert-permanent)').delay(5000).fadeOut();

            // Smooth scrolling for anchor links
            $('a[href^="#"]').click(function(event) {
                var target = $(this.getAttribute('href'));
                if (target.length) {
                    event.preventDefault();
                    $('html, body').stop().animate({
                        scrollTop: target.offset().top - 100
                    }, 1000);
                }
            });
        });

        function showLoading() {
            $('#loadingOverlay').fadeIn();
        }

        function hideLoading() {
            $('#loadingOverlay').fadeOut();
        }

        function showToast(title, message, type = 'info') {
            const toastId = 'toast-' + Date.now();
            const iconClass = {
                'success': 'fa-check-circle text-success',
                'error': 'fa-exclamation-triangle text-danger',
                'warning': 'fa-exclamation-triangle text-warning',
                'info': 'fa-info-circle text-info'
            }[type] || 'fa-info-circle text-info';

            const toastHtml = `
                <div id="${toastId}" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <i class="fas ${iconClass} me-2"></i>
                        <strong class="me-auto">${title}</strong>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">
                        ${message}
                    </div>
                </div>
            `;

            $('#toastContainer').append(toastHtml);
            const toast = new bootstrap.Toast(document.getElementById(toastId));
            toast.show();

            // Remove toast element after it's hidden
            document.getElementById(toastId).addEventListener('hidden.bs.toast', function() {
                this.remove();
            });
        }

        // Global error handling
        window.addEventListener('unhandledrejection', function(event) {
            console.error('Unhandled promise rejection:', event.reason);
            showToast('Error', 'An unexpected error occurred. Please try again.', 'error');
            hideLoading();
        });

        // Handle navigation loading states
        $('a:not([href^="#"]):not([href^="javascript:"]):not([data-bs-toggle])').click(function(e) {
            const href = $(this).attr('href');
            if (href && !href.startsWith('mailto:') && !href.startsWith('tel:')) {
                setTimeout(showLoading, 100);
            }
        });

        // Set active navigation items
        const currentPath = window.location.pathname;
        $('.navbar-nav .nav-link').each(function() {
            const linkPath = $(this).attr('href');
            if (linkPath && currentPath.includes(linkPath) && linkPath !== '/') {
                $(this).addClass('active');
            }
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>