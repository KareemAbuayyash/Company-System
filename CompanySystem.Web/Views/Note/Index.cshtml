@model CompanySystem.Web.ViewModels.NotesIndexViewModel
@{
    ViewData["Title"] = "Notes";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>
                    <i class="fas fa-sticky-note"></i> Notes Management
                </h2>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Add New Note
                </a>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Filter Section -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-filter"></i> Filter Notes
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-2">
                                <label asp-for="Filter.EmployeeId" class="form-label"></label>
                                <input asp-for="Filter.EmployeeId" class="form-control" />
                            </div>
                            <div class="col-md-2">
                                <label asp-for="Filter.NoteType" class="form-label"></label>
                                <select asp-for="Filter.NoteType" class="form-select">
                                    <option value="">All Types</option>
                                    <option value="Technical">Technical</option>
                                    <option value="Behavioral">Behavioral</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label asp-for="Filter.CreatedBy" class="form-label"></label>
                                <input asp-for="Filter.CreatedBy" class="form-control" />
                            </div>
                            <div class="col-md-2">
                                <label asp-for="Filter.FromDate" class="form-label"></label>
                                <input asp-for="Filter.FromDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-2">
                                <label asp-for="Filter.ToDate" class="form-label"></label>
                                <input asp-for="Filter.ToDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-2 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="fas fa-search"></i> Filter
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-times"></i> Clear
                                </a>
                            </div>
                        </div>
                        <input asp-for="Filter.PageNumber" type="hidden" />
                        <input asp-for="Filter.PageSize" type="hidden" />
                    </form>
                </div>
            </div>

            <!-- Notes Table -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        Notes List (@Model.TotalCount total)
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Notes.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Employee ID</th>
                                        <th>Type</th>
                                        <th>Title</th>
                                        <th>Created By</th>
                                        <th>Created Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var note in Model.Notes)
                                    {
                                        <tr>
                                            <td>@note.EmployeeId</td>
                                            <td>
                                                <span class="badge @(note.NoteType == "Technical" ? "bg-info" : "bg-warning")">
                                                    @note.NoteType
                                                </span>
                                            </td>
                                            <td>@note.Title</td>
                                            <td>@note.CreatedBy</td>
                                            <td>@note.CreatedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@note.NoteId" class="btn btn-sm btn-outline-primary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@note.NoteId" class="btn btn-sm btn-outline-warning" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@note.NoteId" class="btn btn-sm btn-outline-danger" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Notes pagination">
                                <ul class="pagination justify-content-center">
                                    @if (Model.HasPreviousPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="Index" asp-all-route-data="@GetRouteData(Model.Filter.PageNumber - 1)">Previous</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">Previous</span>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.Filter.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.Filter.PageNumber + 2); i++)
                                    {
                                        @if (i == Model.Filter.PageNumber)
                                        {
                                            <li class="page-item active">
                                                <span class="page-link">@i</span>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item">
                                                <a class="page-link" asp-action="Index" asp-all-route-data="@GetRouteData(i)">@i</a>
                                            </li>
                                        }
                                    }

                                    @if (Model.HasNextPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="Index" asp-all-route-data="@GetRouteData(Model.Filter.PageNumber + 1)">Next</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">Next</span>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-sticky-note fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No notes found</h5>
                            <p class="text-muted">Try adjusting your filter criteria or create a new note.</p>
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Add First Note
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private Dictionary<string, string?> GetRouteData(int pageNumber)
    {
        var routeData = new Dictionary<string, string?>
        {
            { "pageNumber", pageNumber.ToString() },
            { "pageSize", Model.Filter.PageSize.ToString() }
        };

        if (Model.Filter.EmployeeId.HasValue)
            routeData.Add("employeeId", Model.Filter.EmployeeId.ToString());
        if (!string.IsNullOrEmpty(Model.Filter.NoteType))
            routeData.Add("noteType", Model.Filter.NoteType);
        if (!string.IsNullOrEmpty(Model.Filter.CreatedBy))
            routeData.Add("createdBy", Model.Filter.CreatedBy);
        if (Model.Filter.FromDate.HasValue)
            routeData.Add("fromDate", Model.Filter.FromDate.Value.ToString("yyyy-MM-dd"));
        if (Model.Filter.ToDate.HasValue)
            routeData.Add("toDate", Model.Filter.ToDate.Value.ToString("yyyy-MM-dd"));

        return routeData;
    }
}
