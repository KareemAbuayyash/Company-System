// <auto-generated />
using System;
using CompanySystem.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanySystem.Data.Migrations
{
    [DbContext(typeof(CompanySystemDbContext))]
    [Migration("20250813083917_UpdateRolesToNewNames")]
    partial class UpdateRolesToNewNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CompanySystem.Data.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentName");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7489),
                            DepartmentName = "Human Resources",
                            IsDeleted = false
                        },
                        new
                        {
                            DepartmentId = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7491),
                            DepartmentName = "Information Technology",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("CompanySystem.Data.Models.MainPageContent", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ContentId");

                    b.HasIndex("SectionName");

                    b.ToTable("MainPageContents");

                    b.HasData(
                        new
                        {
                            ContentId = 1,
                            Content = "We are a leading company in our industry, committed to excellence and innovation.",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7628),
                            IsDeleted = false,
                            SectionName = "Overview",
                            Title = "Welcome to Our Company"
                        },
                        new
                        {
                            ContentId = 2,
                            Content = "Founded in 2020, we have been providing exceptional services to our clients worldwide.",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7630),
                            IsDeleted = false,
                            SectionName = "AboutUs",
                            Title = "About Our Company"
                        },
                        new
                        {
                            ContentId = 3,
                            Content = "We offer a comprehensive range of professional services including consulting and development.",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7632),
                            IsDeleted = false,
                            SectionName = "Services",
                            Title = "Our Professional Services"
                        });
                });

            modelBuilder.Entity("CompanySystem.Data.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NoteType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("NoteId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NoteType");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("CompanySystem.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7585),
                            Description = "Full system access with all permissions",
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7588),
                            Description = "Human Resources management access",
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "HR"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7589),
                            Description = "Team lead and project management access",
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "Lead"
                        },
                        new
                        {
                            RoleId = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7591),
                            Description = "Standard employee access",
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "Employee"
                        });
                });

            modelBuilder.Entity("CompanySystem.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7608),
                            Email = "admin@company.com",
                            FirstName = "System",
                            IsActive = true,
                            IsDeleted = false,
                            LastLoginDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7607),
                            LastName = "Administrator",
                            PhoneNumber = "1234567890",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7612),
                            DepartmentId = 1,
                            Email = "hr@company.com",
                            FirstName = "HR",
                            IsActive = true,
                            IsDeleted = false,
                            LastLoginDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7611),
                            LastName = "User",
                            PhoneNumber = "1234567891",
                            RoleId = 2,
                            Username = "hr.user"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7615),
                            DepartmentId = 2,
                            Email = "lead@company.com",
                            FirstName = "Team",
                            IsActive = true,
                            IsDeleted = false,
                            LastLoginDate = new DateTime(2025, 8, 13, 8, 39, 16, 976, DateTimeKind.Utc).AddTicks(7614),
                            LastName = "Lead",
                            PhoneNumber = "1234567892",
                            RoleId = 3,
                            Username = "lead.user"
                        });
                });

            modelBuilder.Entity("CompanySystem.Data.Models.User", b =>
                {
                    b.HasOne("CompanySystem.Data.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CompanySystem.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CompanySystem.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
